{"version":3,"file":"bestsellers.bundle.min.mjs","mappings":"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","sources":["webpack://Bookworm/webpack/bootstrap","webpack://Bookworm/webpack/runtime/global","webpack://Bookworm/webpack/runtime/publicPath","webpack://Bookworm/./src/main/ts/bestsellers.ts","webpack://Bookworm/./src/main/ts/navbar.ts","webpack://Bookworm/./src/main/ts/bookshelf/book-actions.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && !scriptUrl) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","import { createNavbar } from \"./navbar\";\nimport { addIconsToBookCard } from \"./bookshelf/book-actions\";\n\nconst bodyHTML: HTMLElement = document.querySelector('body') as HTMLElement;\nbodyHTML.prepend(createNavbar());\n\nconsole.log(\"Genres\");\n\ndocument.addEventListener('DOMContentLoaded', function () {\n    const NY_TIMES_API_KEY = \"JrHXn4ufVldkRPHOEsBzG3wUMFHtGn1M\";\n    const publishedDate = ''; \n    const apiUrl = `https://api.nytimes.com/svc/books/v3/lists/overview.json?published_date=${publishedDate}&api-key=${NY_TIMES_API_KEY}`;\n    const bookListElement = document.getElementById('bookList');\n\n    interface Book {\n        title: string;\n        author: string;\n        description: string;\n        amazon_product_url: string;\n        book_image: string;\n    }\n    \n    // Function to create a book card\n    function createBookCard(book: Book): HTMLElement {\n        const card = document.createElement('div');\n        card.className = 'bg-tan p-4  flex flex-col justify-center items-center';\n\n        // Create the HTML content of the book card,styling in the card\n        card.innerHTML = `\n        <div class=\"flex\">\n        <div class=\"flex-none\">\n            <img src=\"${book.book_image}\" alt=\"Cover of ${book.title}\" class=\"w-4 h-32 mb-4 shadow-xl shadow-cyan\">\n        </div>\n        <div class=\"flex-grow ml-4\">\n            <div class=\"font-bold text-orange\">${book.title}</div>\n            <div class=\"font-semibold text-green\">Author: ${book.author}</div>\n            <div class=\"mt-2\">${book.description}</div>\n            <div class=\"mt-4\">\n            <button class=\"rounded mt-2 text-white px-3 py-1 sm:px-6 sm:py-3 bg-orange cursor-pointer transition-opacity ease-out hover:ease-in\" onclick=\"window.open('${book.amazon_product_url}', '_blank')\">Buy Book</button>\n            </div>\n        </div>\n    \n    \n        `;\n    \n        addIconsToBookCard(card);\n\n        return card;\n    }\n      // Check if the data is already cached\n      const cachedBooksData =JSON.parse(localStorage.getItem('cachedBooksData')||'[]');\n      if (cachedBooksData.length>0) {\n         cachedBooksData.forEach((book:Book) => {\n            const bookCard = createBookCard(book);\n            bookListElement?.appendChild(bookCard);\n        });\n        console.log(\"Using cached book data:\", cachedBooksData);\n    } else {\n        fetch(apiUrl)\n            .then((response) => {\n                if (!response.ok) {\n                    throw new Error(`HTTP error! Status: ${response.status}`);\n                }\n                return response.json();\n            })\n        .then((data: {\n            results: {\n                lists: {\n                    books: {\n                        title: string;\n                        author: string;\n                        description: string;\n                        amazon_product_url: string;\n                        book_image: string; \n                    }[];\n                }[];\n            };\n        }) => {\n            // Extract book data from the API response and create book objects\n            const booksData = data.results.lists[0].books.map((bookInfo) => {\n                return {\n                    title: bookInfo.title,\n                    author: bookInfo.author,\n                    description: bookInfo.description,\n                    amazon_product_url: bookInfo.amazon_product_url,\n                    book_image: bookInfo.book_image,\n                };\n            });\nlocalStorage.setItem('cachedBooksData', JSON.stringify(booksData));\nconsole.log(\"Fetched book data from API:\", booksData);\n            // Iterate through the book data and append book cards to the book list\n            booksData.forEach((book:Book) => {\n                const bookCard = createBookCard(book);\n                bookListElement?.appendChild(bookCard); //4 possible null value\n            });\n        })\n        .catch((error) => {\n            console.error('Error fetching NY Times bestseller data:', error);\n        });\n    }\n});\n","import logoImgPath from \"../resource/img/bookworm-transparent.png\";\n\nexport const createNavbar = (): HTMLDivElement => {\n\n    const brandContainer: HTMLDivElement = document.createElement('div');\n    brandContainer.classList.add('flex', 'items-center')\n\n    const logoImage: HTMLImageElement = document.createElement('img');\n    logoImage.width = 125;\n    logoImage.height = 100;\n    logoImage.src = logoImgPath;\n    logoImage.alt = \"Bookworm logo\";\n\n    const logoBookAnchor: HTMLHeadingElement = document.createElement('h1');\n    logoBookAnchor.classList.add('text-pink', 'font-bold', 'text-4xl');\n    logoBookAnchor.textContent = 'Book';\n\n    const logoWormAnchor: HTMLHeadingElement = document.createElement('h1');\n    logoWormAnchor.classList.add('text-white', 'font-bold', 'text-4xl');\n    logoWormAnchor.textContent = 'Worm';\n\n    brandContainer.appendChild(logoImage);\n    brandContainer.appendChild(logoBookAnchor);\n    brandContainer.appendChild(logoWormAnchor);\n\n    const home: HTMLAnchorElement = document.createElement('a');\n    home.classList.add('inline-block', 'text-white', 'p-4', 'text-xl')\n    home.href = './index.html';\n    home.textContent = 'Home';\n\n    const bestSellers: HTMLAnchorElement = document.createElement('a');\n    bestSellers.classList.add('inline-block', 'text-white', 'p-4', 'text-xl');\n    bestSellers.href = './bestsellers.html';\n    bestSellers.textContent = 'Bestsellers';\n\n    const forYou: HTMLAnchorElement = document.createElement('a');\n    forYou.classList.add('inline-block', 'text-white', 'p-4', 'text-xl', 'whitespace-nowrap');\n    forYou.href = './for-you.html';\n    forYou.textContent = 'For You';\n\n    const bookshelf: HTMLAnchorElement = document.createElement('a');\n    bookshelf.classList.add('inline-block', 'text-white', 'p-4', 'text-xl');\n    bookshelf.href = './bookshelf.html';\n    bookshelf.textContent = 'Bookshelf';\n\n    const currentPage = window.location.pathname;\n\n    for (const headerAnchor of [home, bestSellers, forYou, bookshelf])\n    {\n        if (headerAnchor.href.endsWith(currentPage))\n        {\n            headerAnchor.classList.add('font-bold');\n        }\n    }\n\n    const navLinks = document.createElement(\"div\");\n    navLinks.classList.add('flex', 'flex-nowrap');\n\n    navLinks.appendChild(home);\n    navLinks.appendChild(bestSellers);\n    navLinks.appendChild(forYou);\n    navLinks.appendChild(bookshelf);\n\n    const headerContainer: HTMLDivElement = document.createElement('nav') as HTMLDivElement;\n    headerContainer.classList.add('flex', 'flex-wrap', 'justify-between', 'items-center', 'w-full', 'bg-green', 'px-8');\n    headerContainer.id = 'header';\n\n    headerContainer.appendChild(brandContainer);\n    headerContainer.appendChild(navLinks);\n\n    return headerContainer;\n}\n","import heartPNGPath from \"../../resource/img/heart.png\";\nimport downPNGPath from \"../../resource/img/down.png\";\n\nexport function addIconsToBookCard(card: HTMLDivElement) {\n    if (card.querySelector('.icon-container')) {\n        return;\n    }\n\n    const iconContainer = document.createElement(\"div\");\n    iconContainer.classList.add(\"flex\", \"justify-end\", \"top-2\", \"right-2\");\n    \n    const heartIcon = document.createElement(\"img\");\n    heartIcon.src = heartPNGPath;\n    heartIcon.classList.add(\"inline-block\", \"mr-3\", \"cursor-pointer\");\n    heartIcon.addEventListener(\"click\", (e) => {\n        e.stopPropagation(); // Prevent triggering other click events on the card\n        saveBookToFavorites(card);\n    });\n\n    const downIcon = document.createElement(\"img\");\n    downIcon.src = downPNGPath;\n    downIcon.classList.add(\"inline-block\", \"cursor-pointer\");\n\n    iconContainer.appendChild(heartIcon);\n    iconContainer.appendChild(downIcon);\n    card.appendChild(iconContainer);\n}\n\nfunction saveBookToFavorites(card: HTMLDivElement) {\n    const bookTitleElement = card.querySelector(\"p\") || card.querySelector(\".font-bold.text-orange\");\n    const bookAuthorElement = card.querySelector(\".author\");\n    const bookCoverElement = card.querySelector(\"img\");\n    if (bookCoverElement) {\n        bookCoverElement.classList.add(\"w-64\", \"h-64\");\n    }\n\n    // Add null checks for each element\n    const bookTitle = bookTitleElement ? bookTitleElement.textContent : \"\";\n    const bookAuthor = bookAuthorElement ? bookAuthorElement.textContent : \"\";\n    const bookCover = bookCoverElement ? bookCoverElement.src : \"\";\n\n    // Here, we're creating an object to store the book details.\n    const favoriteBook = {\n        title: bookTitle,\n        author: bookAuthor,\n        cover: bookCover\n    };\n\n    const favoriteBooks = JSON.parse(localStorage.getItem(\"favoriteBooks\") || \"[]\");\n    favoriteBooks.push(favoriteBook);\n    localStorage.setItem(\"favoriteBooks\", JSON.stringify(favoriteBooks));\n}\n"],"names":["__webpack_require__","g","globalThis","this","Function","e","window","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","length","i","Error","replace","p","querySelector","prepend","brandContainer","createElement","classList","add","logoImage","width","height","alt","logoBookAnchor","textContent","logoWormAnchor","appendChild","home","href","bestSellers","forYou","bookshelf","currentPage","pathname","headerAnchor","endsWith","navLinks","headerContainer","id","createNavbar","console","log","addEventListener","bookListElement","getElementById","createBookCard","book","card","className","innerHTML","book_image","title","author","description","amazon_product_url","iconContainer","heartIcon","stopPropagation","bookTitleElement","bookAuthorElement","bookCoverElement","favoriteBook","cover","favoriteBooks","JSON","parse","localStorage","getItem","push","setItem","stringify","saveBookToFavorites","downIcon","addIconsToBookCard","cachedBooksData","forEach","bookCard","fetch","then","response","ok","status","json","data","booksData","results","lists","books","map","bookInfo","catch","error"],"sourceRoot":""}