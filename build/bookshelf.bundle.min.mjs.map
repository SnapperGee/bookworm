{"version":3,"file":"bookshelf.bundle.min.mjs","mappings":"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","sources":["webpack://Bookworm/webpack/bootstrap","webpack://Bookworm/webpack/runtime/global","webpack://Bookworm/webpack/runtime/publicPath","webpack://Bookworm/./src/main/ts/bookshelf/newshelf.ts","webpack://Bookworm/./src/main/ts/bookshelf/newshelfModal.ts","webpack://Bookworm/./src/main/ts/bookshelf.ts","webpack://Bookworm/./src/main/ts/navbar.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && !scriptUrl) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","export const createNewShelf = (shelfId: string, shelfName: string, colorClass: string): HTMLDivElement => {\n\n    const playlistContainer: HTMLDivElement = document.createElement('div') as HTMLDivElement;\n        playlistContainer.classList.add('shelfId', 'flex', 'flex-col', 'justify-center', 'm-5');\n        const playlistContainerId = shelfId || ('shelfId' + new Date().getTime());\n        playlistContainer.id = playlistContainerId;\n\n    const playlistHeader: HTMLDivElement = document.createElement('div');\n        playlistHeader.classList.add(colorClass, 'rounded-lg', 'pb-1', 'w-full', 'flex', 'items-center', 'justify-between');\n        const playlistHeaderId = 'header-color-' + new Date().getTime();\n        playlistHeader.id = playlistHeaderId;\n    \n    const playlistName: HTMLHeadingElement = document.createElement('h3');\n        playlistName.classList.add('inline-block', 'm-5', 'text-white', 'font-bold', 'text-xl');\n        playlistName.textContent = `${shelfName}`;\n\n    const playlistBooks: HTMLDivElement = document.createElement('div');\n        playlistBooks.classList.add('row-list', 'flex', 'flex-row', 'p-5', 'bg-slate-100', 'rounded-lg', 'pb-1', 'w-full');\n        const playlistBooksId = \"row-list\" + new Date().getTime();\n        playlistBooks.id = playlistBooksId;\n\n\n    playlistContainer.appendChild(playlistHeader);\n    playlistHeader.appendChild(playlistName);\n    playlistContainer.appendChild(playlistBooks);\n\n    return playlistContainer;\n\n}","import { createNewShelf } from './newshelf';\n\nexport function createModalHandler(open: boolean | null = null) {\n    const createModal = document.getElementById('createModal');\n    if (!createModal) return;\n\n    if (open === true) {\n        createModal.style.display = \"block\";\n    } else if (open === false) {\n        createModal.style.display = \"none\";\n    } else {\n        createModal.style.display = createModal.style.display === \"none\" ? \"block\" : \"none\";\n    }\n}\n\nconst createSVG = document.getElementById('add-list');\n    createSVG?.addEventListener('click', () => {\n        console.log('Modal opened');\n        createModalHandler(true);\n});\n\nconst closeCreateModalBtn = document.getElementById('closeCreate');\n    closeCreateModalBtn?.addEventListener('click', (event) => {\n        event.stopPropagation();\n        console.log('Modal closed');\n        createModalHandler(false); \n});\n\nconst createShelfBtn = document.getElementById('create');\ncreateShelfBtn?.addEventListener('click', () => {\n    const nameInput = document.getElementById('name') as HTMLInputElement;\n    const colorInput = document.getElementById('colorPicker') as HTMLSelectElement;\n    const shelfName = nameInput.value; \n    const colorClass = colorInput.value;\n\n    // Generate a unique shelfId based on the current time\n    const shelfId = 'shelf-' + new Date().getTime();\n\n    if (shelfName === '') {\n        console.log('No name specified');\n        createModalHandler(false)\n        return;\n    }\n\n    else {\n        const createList: HTMLElement = document.querySelector('body') as HTMLElement;\n        createList.append(createNewShelf(shelfId, shelfName, colorClass));\n\n        const existingShelves = JSON.parse(localStorage.getItem('shelves') || '[]');\n        existingShelves.push({ id: shelfId, name: shelfName, color: colorClass });\n        localStorage.setItem('shelves', JSON.stringify(existingShelves));\n        \n        createModalHandler(false);\n        console.log(`New shelf named: ${shelfName}`);\n    }\n});\n","import { createNavbar } from \"./navbar\";\nimport { createNewShelf } from './bookshelf/newshelf';\nimport { createModalHandler } from './bookshelf/newshelfModal';\nimport { addIconsToBookCard } from \"./bookshelf/book-actions\";\n\nconst bodyHTML: HTMLElement = document.querySelector('body') as HTMLElement;\nbodyHTML.prepend(createNavbar());\n\ntype Shelf = {\n    id: string;\n    name: string;\n    color: string;\n    books?: { title: string, author: string, cover: string }[];\n};\n\nconst savedShelves: Shelf[] = JSON.parse(localStorage.getItem('shelves') || '[]');\nfor (const shelf of savedShelves) {\n    if (shelf) { // Add a null check\n        bodyHTML.append(createNewShelf(shelf.id, shelf.name, shelf.color));\n    }\n}\n\ncreateModalHandler(false);\n\n\nfunction displayFavoriteBooks() {\n\n    const favoriteBooks: { title: string, author: string, cover: string }[] = JSON.parse(localStorage.getItem(\"favoriteBooks\") || \"[]\");\n\n    const rowContainer = document.getElementById(\"row-container\");\n    if (rowContainer) {\n        favoriteBooks.forEach(book => {\n            const bookCard = document.createElement('div');\n            bookCard.innerHTML = `\n                <img src=\"${book.cover}\" alt=\"${book.title}\">\n                <p>${book.title}</p>\n                <span class=\"author\">${book.author}</span>\n            `;\n            rowContainer.appendChild(bookCard);\n        });\n    }\n}\n\ndisplayFavoriteBooks();\n\nfunction displayNewShelfBooks() {\n\n    for (const shelf of savedShelves) {\n\n        const shelfBooks = shelf.books || [];\n\n        const shelfContainer = document.querySelector(`.row-list`);\n\n        if (shelfContainer) {\n            for (const book of shelfBooks) {\n                const bookCard = document.createElement('div');\n                bookCard.innerHTML = `\n                    <img src=\"${book.cover}\" alt=\"${book.title}\">\n                    <p>${book.title}</p>\n                    <span class=\"author\">${book.author}</span>\n                `;\n                shelfContainer.appendChild(bookCard);\n            }\n        }\n    }\n}\n\ndisplayNewShelfBooks();\n\nconsole.log(\"Bookshelf\");\n","import logoImgPath from \"../resource/img/bookworm-transparent.png\";\n\nexport const createNavbar = (): HTMLDivElement => {\n\n    const brandContainer: HTMLDivElement = document.createElement('div');\n    brandContainer.classList.add('flex', 'items-center')\n\n    const logoImage: HTMLImageElement = document.createElement('img');\n    logoImage.width = 125;\n    logoImage.height = 100;\n    logoImage.src = logoImgPath;\n    logoImage.alt = \"Bookworm logo\";\n\n    const logoBookAnchor: HTMLHeadingElement = document.createElement('h1');\n    logoBookAnchor.classList.add('text-pink', 'font-bold', 'text-4xl');\n    logoBookAnchor.textContent = 'Book';\n\n    const logoWormAnchor: HTMLHeadingElement = document.createElement('h1');\n    logoWormAnchor.classList.add('text-white', 'font-bold', 'text-4xl');\n    logoWormAnchor.textContent = 'Worm';\n\n    brandContainer.appendChild(logoImage);\n    brandContainer.appendChild(logoBookAnchor);\n    brandContainer.appendChild(logoWormAnchor);\n\n    const home: HTMLAnchorElement = document.createElement('a');\n    home.classList.add('inline-block', 'text-white', 'p-4', 'text-xl')\n    home.href = './index.html';\n    home.textContent = 'Home';\n\n    const bestSellers: HTMLAnchorElement = document.createElement('a');\n    bestSellers.classList.add('inline-block', 'text-white', 'p-4', 'text-xl');\n    bestSellers.href = './bestsellers.html';\n    bestSellers.textContent = 'Bestsellers';\n\n    const forYou: HTMLAnchorElement = document.createElement('a');\n    forYou.classList.add('inline-block', 'text-white', 'p-4', 'text-xl', 'whitespace-nowrap');\n    forYou.href = './for-you.html';\n    forYou.textContent = 'For You';\n\n    const bookshelf: HTMLAnchorElement = document.createElement('a');\n    bookshelf.classList.add('inline-block', 'text-white', 'p-4', 'text-xl');\n    bookshelf.href = './bookshelf.html';\n    bookshelf.textContent = 'Bookshelf';\n\n    const currentPage = window.location.pathname;\n\n    for (const headerAnchor of [home, bestSellers, forYou, bookshelf])\n    {\n        if (headerAnchor.href.endsWith(currentPage))\n        {\n            headerAnchor.classList.add('font-bold');\n        }\n    }\n\n    const navLinks = document.createElement(\"div\");\n    navLinks.classList.add('flex', 'flex-nowrap');\n\n    navLinks.appendChild(home);\n    navLinks.appendChild(bestSellers);\n    navLinks.appendChild(forYou);\n    navLinks.appendChild(bookshelf);\n\n    const headerContainer: HTMLDivElement = document.createElement('nav') as HTMLDivElement;\n    headerContainer.classList.add('flex', 'flex-wrap', 'justify-between', 'items-center', 'w-full', 'bg-green', 'px-8');\n    headerContainer.id = 'header';\n\n    headerContainer.appendChild(brandContainer);\n    headerContainer.appendChild(navLinks);\n\n    return headerContainer;\n}\n"],"names":["__webpack_require__","g","globalThis","this","Function","e","window","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","length","i","Error","replace","p","createNewShelf","shelfId","shelfName","colorClass","playlistContainer","createElement","classList","add","playlistContainerId","Date","getTime","id","playlistHeader","playlistHeaderId","playlistName","textContent","playlistBooks","playlistBooksId","appendChild","createModalHandler","open","createModal","getElementById","style","display","createSVG","addEventListener","console","log","closeCreateModalBtn","event","stopPropagation","createShelfBtn","nameInput","colorInput","value","querySelector","append","existingShelves","JSON","parse","localStorage","getItem","push","name","color","setItem","stringify","bodyHTML","prepend","brandContainer","logoImage","width","height","alt","logoBookAnchor","logoWormAnchor","home","href","bestSellers","forYou","bookshelf","currentPage","pathname","headerAnchor","endsWith","navLinks","headerContainer","createNavbar","savedShelves","shelf","favoriteBooks","rowContainer","forEach","book","bookCard","innerHTML","cover","title","author","displayFavoriteBooks","shelfBooks","books","shelfContainer","displayNewShelfBooks"],"sourceRoot":""}